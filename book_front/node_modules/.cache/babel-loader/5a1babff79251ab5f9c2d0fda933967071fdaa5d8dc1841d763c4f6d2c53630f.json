{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst NAVER_CLIENT_ID = process.env.NAVER_CLIENT_ID;\nconst NAVER_CLIENT_SECRET = process.env.NAVER_CLIENT_SECRET;\n\n// 🔍 네이버 API로 책 검색 (비동기)\nexport const searchBooks = createAsyncThunk(\"books/searchBooks\", async query => {\n  const response = await axios.get(`https://openapi.naver.com/v1/search/book.json?query=${query}`, {\n    headers: {\n      \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n      \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET\n    }\n  });\n  return response.data.items;\n});\nconst bookSlice = createSlice({\n  name: \"books\",\n  initialState: {\n    bookList: [],\n    // 네이버 검색 결과\n    selectedBook: null,\n    // 선택한 책 정보\n    status: \"idle\" // API 상태 관리\n  },\n  reducers: {\n    setSelectedBook: (state, action) => {\n      state.selectedBook = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(searchBooks.pending, state => {\n      state.status = \"loading\";\n    }).addCase(searchBooks.fulfilled, (state, action) => {\n      state.bookList = action.payload;\n      state.status = \"succeeded\";\n    }).addCase(searchBooks.rejected, state => {\n      state.status = \"failed\";\n    });\n  }\n});\nexport const {\n  setSelectedBook\n} = bookSlice.actions;\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","NAVER_CLIENT_ID","process","env","NAVER_CLIENT_SECRET","searchBooks","query","response","get","headers","data","items","bookSlice","name","initialState","bookList","selectedBook","status","reducers","setSelectedBook","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/ori/Desktop/project/book/book_front/src/\bredux/bookSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst NAVER_CLIENT_ID = process.env.NAVER_CLIENT_ID;\nconst NAVER_CLIENT_SECRET = process.env.NAVER_CLIENT_SECRET;\n\n// 🔍 네이버 API로 책 검색 (비동기)\nexport const searchBooks = createAsyncThunk(\n  \"books/searchBooks\",\n  async (query) => {\n    const response = await axios.get(\n      `https://openapi.naver.com/v1/search/book.json?query=${query}`,\n      {\n        headers: {\n          \"X-Naver-Client-Id\": NAVER_CLIENT_ID,\n          \"X-Naver-Client-Secret\": NAVER_CLIENT_SECRET,\n        },\n      }\n    );\n    return response.data.items;\n  }\n);\n\nconst bookSlice = createSlice({\n  name: \"books\",\n  initialState: {\n    bookList: [], // 네이버 검색 결과\n    selectedBook: null, // 선택한 책 정보\n    status: \"idle\", // API 상태 관리\n  },\n  reducers: {\n    setSelectedBook: (state, action) => {\n      state.selectedBook = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(searchBooks.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(searchBooks.fulfilled, (state, action) => {\n        state.bookList = action.payload;\n        state.status = \"succeeded\";\n      })\n      .addCase(searchBooks.rejected, (state) => {\n        state.status = \"failed\";\n      });\n  },\n});\n\nexport const { setSelectedBook } = bookSlice.actions;\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACF,eAAe;AACnD,MAAMG,mBAAmB,GAAGF,OAAO,CAACC,GAAG,CAACC,mBAAmB;;AAE3D;AACA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CACzC,mBAAmB,EACnB,MAAOO,KAAK,IAAK;EACf,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC9B,uDAAuDF,KAAK,EAAE,EAC9D;IACEG,OAAO,EAAE;MACP,mBAAmB,EAAER,eAAe;MACpC,uBAAuB,EAAEG;IAC3B;EACF,CACF,CAAC;EACD,OAAOG,QAAQ,CAACG,IAAI,CAACC,KAAK;AAC5B,CACF,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IAAE;IACdC,YAAY,EAAE,IAAI;IAAE;IACpBC,MAAM,EAAE,MAAM,CAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACC,OAAO;IACrC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAGN,KAAK,IAAK;MACvCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACpB,WAAW,CAACsB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACH,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDQ,OAAO,CAACpB,WAAW,CAACuB,QAAQ,EAAGR,KAAK,IAAK;MACxCA,KAAK,CAACH,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAgB,CAAC,GAAGP,SAAS,CAACiB,OAAO;AACpD,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}