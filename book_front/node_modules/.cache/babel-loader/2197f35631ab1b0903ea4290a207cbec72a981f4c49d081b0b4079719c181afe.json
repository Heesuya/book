{"ast":null,"code":"var _jsxFileName = \"/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\"\n  });\n  const handleSearch = async () => {\n    if (!searchTitle) return alert(\"책 제목을 입력하세요!\");\n    try {\n      const response = await axios.get(`${backServer}/api/search-books`, {\n        params: {\n          query: searchTitle\n        }\n      });\n      let bookInfo = response.data;\n      if (!Array.isArray(bookInfo)) {\n        bookInfo = [bookInfo];\n      }\n      if (bookInfo.length > 0) {\n        const book = bookInfo[0];\n        setBookData({\n          title: book.title.replace(/<b>|<\\/b>/g, \"\"),\n          author: book.author || \"\",\n          publisher: book.publisher || \"\",\n          description: book.description || \"\",\n          image: book.image || \"\"\n        });\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"책 검색 실패:\", error);\n      alert(\"검색 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BookForm, {\n    bookData: bookData,\n    setBookData: setBookData,\n    handleSearch: handleSearch,\n    searchTitle: searchTitle,\n    setSearchTitle: setSearchTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"/4RtkaLa5kuhP8eS2UrAXvYtLSA=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BookList","_s","backServer","process","env","REACT_APP_BACK_SERVER","searchTitle","setSearchTitle","bookData","setBookData","title","author","publisher","description","image","handleSearch","alert","response","get","params","query","bookInfo","data","Array","isArray","length","book","replace","error","console","BookForm","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst BookList = () => {\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  const handleSearch = async () => {\n    if (!searchTitle) return alert(\"책 제목을 입력하세요!\");\n\n    try {\n      const response = await axios.get(`${backServer}/api/search-books`, {\n        params: { query: searchTitle },\n      });\n      let bookInfo = response.data;\n\n      if (!Array.isArray(bookInfo)) {\n        bookInfo = [bookInfo];\n      }\n\n      if (bookInfo.length > 0) {\n        const book = bookInfo[0];\n        setBookData({\n          title: book.title.replace(/<b>|<\\/b>/g, \"\"),\n          author: book.author || \"\",\n          publisher: book.publisher || \"\",\n          description: book.description || \"\",\n          image: book.image || \"\",\n        });\n      } else {\n        alert(\"검색 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"책 검색 실패:\", error);\n      alert(\"검색 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <BookForm\n      bookData={bookData}\n      setBookData={setBookData}\n      handleSearch={handleSearch}\n      searchTitle={searchTitle}\n      setSearchTitle={setSearchTitle}\n    />\n  );\n};\n\nexport default BookList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACpD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACT,WAAW,EAAE,OAAOU,KAAK,CAAC,cAAc,CAAC;IAE9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,GAAGhB,UAAU,mBAAmB,EAAE;QACjEiB,MAAM,EAAE;UAAEC,KAAK,EAAEd;QAAY;MAC/B,CAAC,CAAC;MACF,IAAIe,QAAQ,GAAGJ,QAAQ,CAACK,IAAI;MAE5B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,EAAE;QAC5BA,QAAQ,GAAG,CAACA,QAAQ,CAAC;MACvB;MAEA,IAAIA,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMC,IAAI,GAAGL,QAAQ,CAAC,CAAC,CAAC;QACxBZ,WAAW,CAAC;UACVC,KAAK,EAAEgB,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;UAC3ChB,MAAM,EAAEe,IAAI,CAACf,MAAM,IAAI,EAAE;UACzBC,SAAS,EAAEc,IAAI,CAACd,SAAS,IAAI,EAAE;UAC/BC,WAAW,EAAEa,IAAI,CAACb,WAAW,IAAI,EAAE;UACnCC,KAAK,EAAEY,IAAI,CAACZ,KAAK,IAAI;QACvB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLE,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChCZ,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF,CAAC;EAED,oBACEjB,OAAA,CAAC+B,QAAQ;IACPtB,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBM,YAAY,EAAEA,YAAa;IAC3BT,WAAW,EAAEA,WAAY;IACzBC,cAAc,EAAEA;EAAe;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEN,CAAC;AAACjC,EAAA,CAnDID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}