{"ast":null,"code":"var _jsxFileName = \"/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookUpdate = () => {\n  _s();\n  const {\n    bookId\n  } = useParams(); // URL에서 bookId 가져오기\n  const navigate = useNavigate();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\"\n  });\n  useEffect(() => {\n    // 책 정보 가져오기\n    axios.get(`${backServer}/api/books/${bookId}`).then(res => {\n      setBookData(res.data); // 서버에서 가져온 책 데이터를 state에 저장\n      console.log(res.data);\n    }).catch(err => {\n      console.error(\"책 정보 불러오기 실패\", err);\n    });\n  }, [bookId]);\n  const handleSave = () => {\n    // 서버에 수정된 책 데이터 전송\n    axios.put(`${backServer}/api/books/${bookId}`, bookData).then(res => {\n      console.log(\"책 정보가 성공적으로 수정되었습니다.\");\n      navigate(`/book/view/${bookId}`); // 수정 후 책 상세 페이지로 이동\n    }).catch(err => {\n      console.error(\"책 정보 수정 실패\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-update-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC45 \\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookForm, {\n      bookData: bookData,\n      setBookData: setBookData // 수정된 데이터를 상위 컴포넌트로 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-save\",\n      onClick: handleSave,\n      children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(BookUpdate, \"o2ZT2/undxpjmIwKKCn2jmczu50=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BookUpdate;\nexport default BookUpdate;\nvar _c;\n$RefreshReg$(_c, \"BookUpdate\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","BookForm","jsxDEV","_jsxDEV","BookUpdate","_s","bookId","navigate","backServer","process","env","REACT_APP_BACK_SERVER","bookData","setBookData","title","author","publisher","description","image","get","then","res","data","console","log","catch","err","error","handleSave","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\n\nconst BookUpdate = () => {\n  const { bookId } = useParams(); // URL에서 bookId 가져오기\n  const navigate = useNavigate();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    // 책 정보 가져오기\n    axios\n      .get(`${backServer}/api/books/${bookId}`)\n      .then((res) => {\n        setBookData(res.data); // 서버에서 가져온 책 데이터를 state에 저장\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.error(\"책 정보 불러오기 실패\", err);\n      });\n  }, [bookId]);\n\n  const handleSave = () => {\n    // 서버에 수정된 책 데이터 전송\n    axios\n      .put(`${backServer}/api/books/${bookId}`, bookData)\n      .then((res) => {\n        console.log(\"책 정보가 성공적으로 수정되었습니다.\");\n        navigate(`/book/view/${bookId}`); // 수정 후 책 상세 페이지로 이동\n      })\n      .catch((err) => {\n        console.error(\"책 정보 수정 실패\", err);\n      });\n  };\n\n  return (\n    <div className=\"book-update-container\">\n      <h1>책 수정하기</h1>\n      <BookForm\n        bookData={bookData}\n        setBookData={setBookData} // 수정된 데이터를 상위 컴포넌트로 전달\n      />\n      <button className=\"btn-save\" onClick={handleSave}>\n        저장하기\n      </button>\n    </div>\n  );\n};\n\nexport default BookUpdate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAEpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACd;IACAI,KAAK,CACFmB,GAAG,CAAC,GAAGX,UAAU,cAAcF,MAAM,EAAE,CAAC,CACxCc,IAAI,CAAEC,GAAG,IAAK;MACbR,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACI,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,CAACpB,MAAM,CAAC,CAAC;EAEZ,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA5B,KAAK,CACF6B,GAAG,CAAC,GAAGrB,UAAU,cAAcF,MAAM,EAAE,EAAEM,QAAQ,CAAC,CAClDQ,IAAI,CAAEC,GAAG,IAAK;MACbE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCjB,QAAQ,CAAC,cAAcD,MAAM,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACI,KAAK,CAAC,YAAY,EAAED,GAAG,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;EAED,oBACEvB,OAAA;IAAK2B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5B,OAAA;MAAA4B,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfhC,OAAA,CAACF,QAAQ;MACPW,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFhC,OAAA;MAAQ2B,SAAS,EAAC,UAAU;MAACM,OAAO,EAAER,UAAW;MAAAG,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnDID,UAAU;EAAA,QACKN,SAAS,EACXC,WAAW;AAAA;AAAAsC,EAAA,GAFxBjC,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}