{"ast":null,"code":"var _jsxFileName = \"/Users/ori/Desktop/project/book/book_front/src/components/book/BookWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\nimport Swal from \"sweetalert2\"; // SweetAlert2 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookWrite = () => {\n  _s();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\"\n  });\n  const [bookList, setBookList] = useState([]);\n  const handleSearch = async () => {\n    if (!searchTitle) {\n      Swal.fire({\n        icon: \"warning\",\n        title: \"검색어 입력\",\n        text: \"책 제목을 입력하세요!\"\n      });\n      return;\n    }\n    setBookList([]);\n    try {\n      const response = await axios.get(`${backServer}/api/search-books`, {\n        params: {\n          query: searchTitle\n        }\n      });\n      let bookInfo = response.data;\n      console.log(response);\n      if (!Array.isArray(bookInfo)) {\n        bookInfo = [bookInfo];\n      }\n      if (bookInfo.length > 0) {\n        setBookList(bookInfo); // 책 리스트 저장\n        console.log(bookList);\n      } else {\n        Swal.fire({\n          icon: \"info\",\n          title: \"검색 결과 없음\",\n          text: \"검색 결과가 없습니다.\"\n        });\n      }\n    } catch (error) {\n      console.error(\"책 검색 실패:\", error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"검색 실패\",\n        text: \"검색 중 오류가 발생했습니다.\"\n      });\n    }\n  };\n  const handleBookSelect = book => {\n    setBookData({\n      title: book.title,\n      author: book.author || \"\",\n      publisher: book.publisher || \"\",\n      description: book.description || \"\",\n      image: book.image || \"\"\n    });\n  };\n\n  // 책 정보 업데이트 함수\n  const handleUpdateBook = async () => {\n    try {\n      // 서버에 책 업데이트 요청\n      const response = await axios.post(`${backServer}/api/books`, bookData);\n      if (response.status === 200) {\n        Swal.fire({\n          icon: \"success\",\n          title: \"책 등록 성공\",\n          text: \"책이 성공적으로 업데이트되었습니다.\"\n        }).then(() => {\n          window.location.href = \"/\"; // 페이지 리다이렉트\n        });\n      }\n    } catch (error) {\n      //console.error(\"책 업데이트 실패:\", error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"책 등록 실패\",\n        text: \"서버에 문의해주세요.\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title\",\n      children: \"\\uD83D\\uDCDA Book Insert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uCC45 \\uC815\\uBCF4 \\uAC00\\uC838\\uC624\\uAE30(\\uC81C\\uBAA9 \\uC785\\uB825)...\",\n        value: searchTitle,\n        onChange: e => setSearchTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: bookList.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"book-api-list\",\n        children: bookList.map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleBookSelect(book),\n          children: book.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookForm, {\n      bookData: bookData,\n      setBookData: setBookData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-button-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdateBook,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(BookWrite, \"QXh3Xm6/UE1uJQ7lcC4mETUSRNg=\");\n_c = BookWrite;\nexport default BookWrite;\nvar _c;\n$RefreshReg$(_c, \"BookWrite\");","map":{"version":3,"names":["React","useState","axios","BookForm","Swal","jsxDEV","_jsxDEV","BookWrite","_s","backServer","process","env","REACT_APP_BACK_SERVER","searchTitle","setSearchTitle","bookData","setBookData","title","author","publisher","description","image","bookList","setBookList","handleSearch","fire","icon","text","response","get","params","query","bookInfo","data","console","log","Array","isArray","length","error","handleBookSelect","book","handleUpdateBook","post","status","then","window","location","href","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/BookWrite.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\nimport Swal from \"sweetalert2\"; // SweetAlert2 임포트\n\nconst BookWrite = () => {\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\",\n  });\n  const [bookList, setBookList] = useState([]);\n\n  const handleSearch = async () => {\n    if (!searchTitle) {\n      Swal.fire({\n        icon: \"warning\",\n        title: \"검색어 입력\",\n        text: \"책 제목을 입력하세요!\",\n      });\n      return;\n    }\n    setBookList([]);\n    try {\n      const response = await axios.get(`${backServer}/api/search-books`, {\n        params: { query: searchTitle },\n      });\n      let bookInfo = response.data;\n      console.log(response);\n      if (!Array.isArray(bookInfo)) {\n        bookInfo = [bookInfo];\n      }\n\n      if (bookInfo.length > 0) {\n        setBookList(bookInfo); // 책 리스트 저장\n        console.log(bookList);\n      } else {\n        Swal.fire({\n          icon: \"info\",\n          title: \"검색 결과 없음\",\n          text: \"검색 결과가 없습니다.\",\n        });\n      }\n    } catch (error) {\n      console.error(\"책 검색 실패:\", error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"검색 실패\",\n        text: \"검색 중 오류가 발생했습니다.\",\n      });\n    }\n  };\n\n  const handleBookSelect = (book) => {\n    setBookData({\n      title: book.title,\n      author: book.author || \"\",\n      publisher: book.publisher || \"\",\n      description: book.description || \"\",\n      image: book.image || \"\",\n    });\n  };\n\n  // 책 정보 업데이트 함수\n  const handleUpdateBook = async () => {\n    try {\n      // 서버에 책 업데이트 요청\n      const response = await axios.post(`${backServer}/api/books`, bookData);\n      if (response.status === 200) {\n        Swal.fire({\n          icon: \"success\",\n          title: \"책 등록 성공\",\n          text: \"책이 성공적으로 업데이트되었습니다.\",\n        }).then(() => {\n          window.location.href = \"/\"; // 페이지 리다이렉트\n        });\n      }\n    } catch (error) {\n      //console.error(\"책 업데이트 실패:\", error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"책 등록 실패\",\n        text: \"서버에 문의해주세요.\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"page-title\">📚 Book Insert</div>\n      {/* 책 검색 입력 */}\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          placeholder=\"책 정보 가져오기(제목 입력)...\"\n          value={searchTitle}\n          onChange={(e) => setSearchTitle(e.target.value)}\n        />\n        <button onClick={handleSearch}>검색</button>\n      </div>\n\n      <div>\n        {bookList.length > 0 && (\n          <ul className=\"book-api-list\">\n            {bookList.map((book, index) => (\n              <li key={index} onClick={() => handleBookSelect(book)}>\n                {book.title}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <BookForm bookData={bookData} setBookData={setBookData} />\n      <div className=\"update-button-wrap\">\n        <button className=\"update-button\" onClick={handleUpdateBook}>\n          등록\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookWrite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}