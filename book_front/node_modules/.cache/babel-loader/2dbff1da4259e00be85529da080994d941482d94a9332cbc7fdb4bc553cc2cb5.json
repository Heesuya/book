{"ast":null,"code":"var _jsxFileName = \"/Users/ori/Desktop/project/book/book_front/src/components/book/PageNavi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageNavi = props => {\n  const pi = props.pi;\n  const reqPage = props.reqPage;\n  const setReqPage = props.setReqPage;\n  //paging jsx가 저장된 배열 선언\n  const arr = new Array();\n  //제일앞으로\n  arr.push(/*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        setReqPage(1);\n      },\n      className: \"material-icons page-item\",\n      children: \"first_page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, \"first-page\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this));\n  //이전페이지\n  arr.push(/*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        if (reqPage !== 1) {\n          setReqPage(reqPage - 1);\n        }\n      },\n      className: \"material-icons page-item\",\n      children: \"navigate_before\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, \"prev-page\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  //페이징 숫자\n  let pageNo = pi.pageNo;\n  for (let i = 0; i < pi.pageNaviSize; i++) {\n    //사용할 데이터를 service에서 만들어서 가져온다\n    arr.push(/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: e => {\n          setReqPage(Number(e.target.innerText));\n        },\n        className: \"page-item\" + (pageNo === reqPage ? \" active-page\" : \"\"),\n        children: pageNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, \"page-\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n    pageNo++;\n    if (pageNo > pi.totalPage) {\n      break;\n    }\n  }\n  //다음페이지\n  arr.push(/*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        if (reqPage !== pi.totalPage) {\n          setReqPage(reqPage + 1);\n        }\n      },\n      className: \"material-icons page-item\",\n      children: \"navigate_next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, \"next-page\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  //제일끝으로\n  arr.push(/*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        setReqPage(pi.totalPage);\n      },\n      className: \"material-icons page-item\",\n      children: \"last_page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, \"last-page\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"pagination\",\n    children: arr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n_c = PageNavi;\nexport default PageNavi;\nvar _c;\n$RefreshReg$(_c, \"PageNavi\");","map":{"version":3,"names":["PageNavi","props","pi","reqPage","setReqPage","arr","Array","push","_jsxDEV","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","pageNo","i","pageNaviSize","e","Number","target","innerText","totalPage","_c","$RefreshReg$"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/PageNavi.js"],"sourcesContent":["const PageNavi = (props) => {\n  const pi = props.pi;\n  const reqPage = props.reqPage;\n  const setReqPage = props.setReqPage;\n  //paging jsx가 저장된 배열 선언\n  const arr = new Array();\n  //제일앞으로\n  arr.push(\n    <li key=\"first-page\">\n      <span\n        onClick={() => {\n          setReqPage(1);\n        }}\n        className=\"material-icons page-item\"\n      >\n        first_page\n      </span>\n    </li>\n  );\n  //이전페이지\n  arr.push(\n    <li key=\"prev-page\">\n      <span\n        onClick={() => {\n          if (reqPage !== 1) {\n            setReqPage(reqPage - 1);\n          }\n        }}\n        className=\"material-icons page-item\"\n      >\n        navigate_before\n      </span>\n    </li>\n  );\n  //페이징 숫자\n  let pageNo = pi.pageNo;\n  for (let i = 0; i < pi.pageNaviSize; i++) {\n    //사용할 데이터를 service에서 만들어서 가져온다\n    arr.push(\n      <li key={\"page-\" + i}>\n        <span\n          onClick={(e) => {\n            setReqPage(Number(e.target.innerText));\n          }}\n          className={\"page-item\" + (pageNo === reqPage ? \" active-page\" : \"\")}\n        >\n          {pageNo}\n        </span>\n      </li>\n    );\n    pageNo++;\n    if (pageNo > pi.totalPage) {\n      break;\n    }\n  }\n  //다음페이지\n  arr.push(\n    <li key=\"next-page\">\n      <span\n        onClick={() => {\n          if (reqPage !== pi.totalPage) {\n            setReqPage(reqPage + 1);\n          }\n        }}\n        className=\"material-icons page-item\"\n      >\n        navigate_next\n      </span>\n    </li>\n  );\n  //제일끝으로\n  arr.push(\n    <li key=\"last-page\">\n      <span\n        onClick={() => {\n          setReqPage(pi.totalPage);\n        }}\n        className=\"material-icons page-item\"\n      >\n        last_page\n      </span>\n    </li>\n  );\n  return <ul className=\"pagination\">{arr}</ul>;\n};\nexport default PageNavi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}