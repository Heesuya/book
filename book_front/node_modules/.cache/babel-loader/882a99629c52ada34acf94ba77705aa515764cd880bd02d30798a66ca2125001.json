{"ast":null,"code":"import axios from\"axios\";import{useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import Swal from\"sweetalert2\";import\"./admin.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{//recoil저장소에 접근하는 방법\nconst[loginId,setLoginId]=useState(\"\");const[memberType,setMemberType]=useState();//console.log(loginId);\n//console.log(memberType);\nconst backServer=process.env.REACT_APP_BACK_SERVER;const navigate=useNavigate();const[member,setMember]=useState({memberId:\"\",memberPw:\"\"});const changeMember=e=>{const name=e.target.name;setMember({...member,[name]:e.target.value});};//console.log(member);\nconst login=()=>{if(member.memberId===\"\"||member.memberPw===\"\"){Swal.fire({text:\"아이디 또는 비밀번호를 입력하세요\",icon:\"info\"});return;}axios.post(`${backServer}/member/login`,member)//select 는 get이 맞지만, password 노출 되지 않게 post 사용\n.then(res=>{console.log(res);setLoginId(res.data.memberId);setMemberType(res.data.memberType);//로그인 이후 axios요청 시 발급받은 토큰값을 자동으로 axios에 추가하는 설정\n//axios.defaults.headers.common[\"Authorization\"] = res.data.accessToken;\n//로그인 상태를 지속적으로 유지시키기위해 발급받은 refreshToken을 브라우저에 저장\n//window.localStorage.setItem(\"refreshToken\", res.data.refreshToken);\nnavigate(\"/\");}).catch(err=>{//console.log(err);\nSwal.fire({text:\"아이디 또는 비밀번호를 확인하세요\",icon:\"warning\"});});};return/*#__PURE__*/_jsxs(\"section\",{className:\"section login-wrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-title\",children:\"\\uAD00\\uB9AC\\uC790 \\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();login();},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-wrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-title\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"memberId\",children:\"\\uC544\\uC774\\uB514\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-item\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"memberId\",id:\"memberId\",value:member.memberId,onChange:changeMember})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-wrap\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-title\",children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"memberPw\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-item\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"memberPw\",id:\"memberPw\",value:member.memberPw,onChange:changeMember})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login-button-box\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary lg\",children:\"\\uB85C\\uADF8\\uC778\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"member-link-box\",children:[/*#__PURE__*/_jsx(Link,{to:\"/join\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(Link,{to:\"#\",children:\"\\uC544\\uC774\\uB514/\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})]})]})]});};export default Login;","map":{"version":3,"names":["axios","useState","Link","useNavigate","Swal","jsx","_jsx","jsxs","_jsxs","Login","loginId","setLoginId","memberType","setMemberType","backServer","process","env","REACT_APP_BACK_SERVER","navigate","member","setMember","memberId","memberPw","changeMember","e","name","target","value","login","fire","text","icon","post","then","res","console","log","data","catch","err","className","children","onSubmit","preventDefault","htmlFor","type","id","onChange","to"],"sources":["/Users/ori/Desktop/project/book/book_front/src/admin/Login.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport \"./admin.css\";\n\nconst Login = () => {\n  //recoil저장소에 접근하는 방법\n  const [loginId, setLoginId] = useState(\"\");\n  const [memberType, setMemberType] = useState();\n  //console.log(loginId);\n  //console.log(memberType);\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const navigate = useNavigate();\n  const [member, setMember] = useState({ memberId: \"\", memberPw: \"\" });\n  const changeMember = (e) => {\n    const name = e.target.name;\n    setMember({ ...member, [name]: e.target.value });\n  };\n  //console.log(member);\n  const login = () => {\n    if (member.memberId === \"\" || member.memberPw === \"\") {\n      Swal.fire({\n        text: \"아이디 또는 비밀번호를 입력하세요\",\n        icon: \"info\",\n      });\n      return;\n    }\n    axios\n      .post(`${backServer}/member/login`, member) //select 는 get이 맞지만, password 노출 되지 않게 post 사용\n      .then((res) => {\n        console.log(res);\n        setLoginId(res.data.memberId);\n        setMemberType(res.data.memberType);\n        //로그인 이후 axios요청 시 발급받은 토큰값을 자동으로 axios에 추가하는 설정\n        //axios.defaults.headers.common[\"Authorization\"] = res.data.accessToken;\n        //로그인 상태를 지속적으로 유지시키기위해 발급받은 refreshToken을 브라우저에 저장\n        //window.localStorage.setItem(\"refreshToken\", res.data.refreshToken);\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        //console.log(err);\n        Swal.fire({\n          text: \"아이디 또는 비밀번호를 확인하세요\",\n          icon: \"warning\",\n        });\n      });\n  };\n  return (\n    <section className=\"section login-wrap\">\n      <div className=\"page-title\">관리자 로그인</div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login();\n        }}\n      >\n        <div className=\"input-wrap\">\n          <div className=\"input-title\">\n            <label htmlFor=\"memberId\">아이디</label>\n          </div>\n          <div className=\"input-item\">\n            <input\n              type=\"text\"\n              name=\"memberId\"\n              id=\"memberId\"\n              value={member.memberId}\n              onChange={changeMember}\n            ></input>\n          </div>\n        </div>\n        <div className=\"input-wrap\">\n          <div className=\"input-title\">\n            <label htmlFor=\"memberPw\">비밀번호</label>\n          </div>\n          <div className=\"input-item\">\n            <input\n              type=\"password\"\n              name=\"memberPw\"\n              id=\"memberPw\"\n              value={member.memberPw}\n              onChange={changeMember}\n            ></input>\n          </div>\n        </div>\n        <div className=\"login-button-box\">\n          <button type=\"submit\" className=\"btn-primary lg\">\n            로그인\n          </button>\n        </div>\n        <div className=\"member-link-box\">\n          <Link to=\"/join\">회원가입</Link>\n          <Link to=\"#\">아이디/비밀번호 찾기</Link>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}