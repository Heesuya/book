{"ast":null,"code":"var _jsxFileName = \"/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\nimport Swal from \"sweetalert2\"; // SweetAlert2 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookUpdate = () => {\n  _s();\n  const {\n    bookId\n  } = useParams(); // URL에서 bookId 가져오기\n  const navigate = useNavigate();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\"\n  });\n  useEffect(() => {\n    // 책 정보 가져오기\n    axios.get(`${backServer}/api/books/${bookId}`).then(res => {\n      setBookData(res.data); // 서버에서 가져온 책 데이터를 state에 저장\n      console.log(res.data);\n    }).catch(err => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"책 정보 불러오기 실패\",\n        text: \"서버에 문의 해주세요.\"\n      });\n      //console.error(\"책 정보 불러오기 실패\", err);\n    });\n  }, [bookId]);\n  const handleSave = () => {\n    // 서버에 수정된 책 데이터 전송\n    axios.put(`${backServer}/api/books/${bookId}`, bookData).then(res => {\n      Swal.fire({\n        icon: \"success\",\n        title: \"성공\",\n        text: \"책 정보가 성공적으로 수정되었습니다.\"\n      });\n      navigate(`/book/view/${bookId}`); // 수정 후 책 상세 페이지로 이동\n    }).catch(err => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"수정 실패\",\n        text: \"서버에 문의해주세요.\"\n      });\n      //console.error(\"책 정보 수정 실패\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-update-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC45 \\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookForm, {\n      bookData: bookData,\n      setBookData: setBookData // 수정된 데이터를 상위 컴포넌트로 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-secondary\",\n        onClick: handleSave,\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(BookUpdate, \"o2ZT2/undxpjmIwKKCn2jmczu50=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BookUpdate;\nexport default BookUpdate;\nvar _c;\n$RefreshReg$(_c, \"BookUpdate\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","BookForm","Swal","jsxDEV","_jsxDEV","BookUpdate","_s","bookId","navigate","backServer","process","env","REACT_APP_BACK_SERVER","bookData","setBookData","title","author","publisher","description","image","get","then","res","data","console","log","catch","err","fire","icon","text","handleSave","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\nimport Swal from \"sweetalert2\"; // SweetAlert2 임포트\n\nconst BookUpdate = () => {\n  const { bookId } = useParams(); // URL에서 bookId 가져오기\n  const navigate = useNavigate();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    // 책 정보 가져오기\n    axios\n      .get(`${backServer}/api/books/${bookId}`)\n      .then((res) => {\n        setBookData(res.data); // 서버에서 가져온 책 데이터를 state에 저장\n        console.log(res.data);\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"책 정보 불러오기 실패\",\n          text: \"서버에 문의 해주세요.\",\n        });\n        //console.error(\"책 정보 불러오기 실패\", err);\n      });\n  }, [bookId]);\n\n  const handleSave = () => {\n    // 서버에 수정된 책 데이터 전송\n    axios\n      .put(`${backServer}/api/books/${bookId}`, bookData)\n      .then((res) => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"성공\",\n          text: \"책 정보가 성공적으로 수정되었습니다.\",\n        });\n        navigate(`/book/view/${bookId}`); // 수정 후 책 상세 페이지로 이동\n      })\n      .catch((err) => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"수정 실패\",\n          text: \"서버에 문의해주세요.\",\n        });\n        //console.error(\"책 정보 수정 실패\", err);\n      });\n  };\n\n  return (\n    <div className=\"book-update-container\">\n      <h1>책 수정하기</h1>\n      <BookForm\n        bookData={bookData}\n        setBookData={setBookData} // 수정된 데이터를 상위 컴포넌트로 전달\n      />\n      <div className=\"btn-wrap\">\n        <button className=\"btn-secondary\" onClick={handleSave}>\n          저장하기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookUpdate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}