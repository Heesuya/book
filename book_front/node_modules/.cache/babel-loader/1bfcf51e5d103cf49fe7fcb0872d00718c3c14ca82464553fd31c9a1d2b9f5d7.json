{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import axios from\"axios\";import BookForm from\"./BookForm\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BookUpdate=()=>{const{bookId}=useParams();// URL에서 bookId 가져오기\nconst navigate=useNavigate();const backServer=process.env.REACT_APP_BACK_SERVER;const[bookData,setBookData]=useState({title:\"\",author:\"\",publisher:\"\",description:\"\",image:\"\"});useEffect(()=>{// 책 정보 가져오기\naxios.get(`${backServer}/api/books/${bookId}`).then(res=>{setBookData(res.data);// 서버에서 가져온 책 데이터를 state에 저장\nconsole.log(res.data);}).catch(err=>{console.error(\"책 정보 불러오기 실패\",err);});},[bookId]);const handleSave=()=>{// 서버에 수정된 책 데이터 전송\naxios.put(`${backServer}/api/books/${bookId}`,bookData).then(res=>{console.log(\"책 정보가 성공적으로 수정되었습니다.\");navigate(`/book/view/${bookId}`);// 수정 후 책 상세 페이지로 이동\n}).catch(err=>{console.error(\"책 정보 수정 실패\",err);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"book-update-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uCC45 \\uC218\\uC815\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(BookForm,{bookData:bookData,setBookData:setBookData// 수정된 데이터를 상위 컴포넌트로 전달\n}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-wrap\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:handleSave,children:\"\\uC800\\uC7A5\\uD558\\uAE30\"})})]});};export default BookUpdate;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","BookForm","jsx","_jsx","jsxs","_jsxs","BookUpdate","bookId","navigate","backServer","process","env","REACT_APP_BACK_SERVER","bookData","setBookData","title","author","publisher","description","image","get","then","res","data","console","log","catch","err","error","handleSave","put","className","children","onClick"],"sources":["/Users/ori/Desktop/project/book/book_front/src/components/book/BookUpdate.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport BookForm from \"./BookForm\";\n\nconst BookUpdate = () => {\n  const { bookId } = useParams(); // URL에서 bookId 가져오기\n  const navigate = useNavigate();\n  const backServer = process.env.REACT_APP_BACK_SERVER;\n\n  const [bookData, setBookData] = useState({\n    title: \"\",\n    author: \"\",\n    publisher: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    // 책 정보 가져오기\n    axios\n      .get(`${backServer}/api/books/${bookId}`)\n      .then((res) => {\n        setBookData(res.data); // 서버에서 가져온 책 데이터를 state에 저장\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.error(\"책 정보 불러오기 실패\", err);\n      });\n  }, [bookId]);\n\n  const handleSave = () => {\n    // 서버에 수정된 책 데이터 전송\n    axios\n      .put(`${backServer}/api/books/${bookId}`, bookData)\n      .then((res) => {\n        console.log(\"책 정보가 성공적으로 수정되었습니다.\");\n        navigate(`/book/view/${bookId}`); // 수정 후 책 상세 페이지로 이동\n      })\n      .catch((err) => {\n        console.error(\"책 정보 수정 실패\", err);\n      });\n  };\n\n  return (\n    <div className=\"book-update-container\">\n      <h1>책 수정하기</h1>\n      <BookForm\n        bookData={bookData}\n        setBookData={setBookData} // 수정된 데이터를 상위 컴포넌트로 전달\n      />\n      <div className=\"btn-wrap\">\n        <button className=\"btn-secondary\" onClick={handleSave}>\n          저장하기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookUpdate;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,MAAO,CAAC,CAAGT,SAAS,CAAC,CAAC,CAAE;AAChC,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,UAAU,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAEpD,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,CACvCkB,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EAAE,CACVC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,KAAK,CAAE,EACT,CAAC,CAAC,CAEFvB,SAAS,CAAC,IAAM,CACd;AACAI,KAAK,CACFoB,GAAG,CAAC,GAAGX,UAAU,cAAcF,MAAM,EAAE,CAAC,CACxCc,IAAI,CAAEC,GAAG,EAAK,CACbR,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC,CAAE;AACvBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,IAAI,CAAC,CACvB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,EAAK,CACdH,OAAO,CAACI,KAAK,CAAC,cAAc,CAAED,GAAG,CAAC,CACpC,CAAC,CAAC,CACN,CAAC,CAAE,CAACpB,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAsB,UAAU,CAAGA,CAAA,GAAM,CACvB;AACA7B,KAAK,CACF8B,GAAG,CAAC,GAAGrB,UAAU,cAAcF,MAAM,EAAE,CAAEM,QAAQ,CAAC,CAClDQ,IAAI,CAAEC,GAAG,EAAK,CACbE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCjB,QAAQ,CAAC,cAAcD,MAAM,EAAE,CAAC,CAAE;AACpC,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,EAAK,CACdH,OAAO,CAACI,KAAK,CAAC,YAAY,CAAED,GAAG,CAAC,CAClC,CAAC,CAAC,CACN,CAAC,CAED,mBACEtB,KAAA,QAAK0B,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC7B,IAAA,OAAA6B,QAAA,CAAI,iCAAM,CAAI,CAAC,cACf7B,IAAA,CAACF,QAAQ,EACPY,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAa;AAAA,CAC3B,CAAC,cACFX,IAAA,QAAK4B,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvB7B,IAAA,WAAQ4B,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEJ,UAAW,CAAAG,QAAA,CAAC,0BAEvD,CAAQ,CAAC,CACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}